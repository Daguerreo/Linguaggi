/* Generated by JTB 1.4.7 */
package parser.visitor;

import parser.syntaxtree.*;

public interface IVoidArguVisitor<A> {

  public void visit(final NodeChoice n, final A argu);

  public void visit(final NodeList n, final A argu);

  public void visit(final NodeListOptional n, final A argu);

  public void visit(final NodeOptional n, final A argu);

  public void visit(final NodeSequence n, final A argu);

  public void visit(final NodeTCF n, final A argu);

  public void visit(final NodeToken n, final A argu);

  public void visit(final Scope n, final A argu);

  public void visit(final Spell n, final A argu);

  public void visit(final Permanent n, final A argu);

  public void visit(final Creature n, final A argu);

  public void visit(final Name n, final A argu);

  public void visit(final Element n, final A argu);

  public void visit(final Cost n, final A argu);

  public void visit(final Mono n, final A argu);

  public void visit(final Duo n, final A argu);

  public void visit(final Trio n, final A argu);

  public void visit(final Subtype n, final A argu);

  public void visit(final Text n, final A argu);

  public void visit(final Stat n, final A argu);

}
